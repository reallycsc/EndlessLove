#pragma once
#include "cocos2d.h"
#include "cocostudio/CocoStudio.h"
#include "ui/CocosGUI.h"
#include "tinyxml2/tinyxml2.h"

USING_NS_CC;
using namespace cocostudio::timeline;
using namespace ui;
using namespace std;
using namespace tinyxml2;

const int GRAVITY = 2940;

#define MAXDWORD 0xffffffff

#define CHECKFALSE(expression) if(!expression) do{return false;}while(0)

enum {
	STATE_GAME_ENTER = 0,
	STATE_GAME_RUN,
	STATE_GAME_PAUSE,
	STATE_GAME_OVER,
};

enum {
	ITEMTYPE_MIN = 0,

	ITEMTYPE_GOLD = 1,
	ITEMTYPE_HEART,
	ITEMTYPE_GUIDELINE,
	ITEMTYPE_ENLARGE,
	ITEMTYPE_SHRINK,
	ITEMTYPE_BOMB,
	ITEMTYPE_HEARTBROKENLEFT,
	ITEMTYPE_HEARTBROKENRIGHT,
	ITEMTYPE_HEARTPLUS,
	ITEMTYPE_HEARTSECRET,
	ITEMTYPE_HEARTGREENTEA,
	ITEMTYPE_SHIELD,

	ITEMTYPE_MAX,
};

enum {
	COUNTDOWN_MIN = 0, 

	COUNTDOWN_GUIDELINE = 1,
	COUNTDOWN_ENLARGE,
	COUNTDOWN_SHRINK,
	COUNTDOWN_SHIELD,

	COUNTDOWN_MAX,
};

enum {
	GAMEOVER_REASON_BOMB = 0,
	GAMEOVER_REASON_NOHEART,
};

const int ZORDER_GAME_LAYER = 0;
const int ZORDER_ENEMY_LAYER = 1;
const int ZORDER_PLAYER_LAYER = 2;
const int ZORDER_CONTROL_LAYER = 3;
const int ZORDER_PAUSE_LAYER = 4;
const int ZORDER_GAMEOVER_LAYER = 5;
const int ZORDER_TEXT_LAYER = 5;
const int ZORDER_NOTICE_LAYER = 6;

const int ZORDER_ENEMYLAYER_ENEMY = 1;
const int ZORDER_ENEMYLAYER_ITEM = 2;

const int ZORDER_PLAYERLAYER_HEARTGREY = 1;
const int ZORDER_PLAYERLAYER_HEART = 2;
const int ZORDER_PLAYERLAYER_HEARTHALF = 3;
const int ZORDER_PLAYERLAYER_HEARTPROGRESS = 4;

#define LANGUAGE_CHINESE
//#define LANGUAGE_ENGLISH

enum {
	GAMETEXT_MAINMENU_TITLE = 1,
	GAMETEXT_MAINMENU_HIGHESTSCORE,
	GAMETEXT_MAINMENU_STARTGAME,
	GAMETEXT_MAINMENU_EXITGAME,

	GAMETEXT_CONTROLLAYER_TOUCHFORSTART,
	GAMETEXT_CONTROLLAYER_PAUSEGAME,

	GAMETEXT_ENEMYLAYER_LEVELUP,

	GAMETEXT_GAMEOVERLAYER_TITLE,
	GAMETEXT_GAMEOVERLAYER_RETRY,
	GAMETEXT_GAMEOVERLAYER_MAINMENU,

	GAMETEXT_PAUSELAYER_TITLE,
	GAMETEXT_PAUSELAYER_RESUME,

	GAMETEXT_PLAYERLAYER_SCORE,
	GAMETEXT_PLAYERLAYER_GUIDELINE,
	GAMETEXT_PLAYERLAYER_ENLARGE,
	GAMETEXT_PLAYERLAYER_SHRINK,
	GAMETEXT_PLAYERLAYER_SHIELD,

	GAMETEXT_PLAYER_GOOD,
	GAMETEXT_PLAYER_GREAT,
	GAMETEXT_PLAYER_PERFECT,

	GAMETEXT_MAINMENU_PLAYERUPGRADE,

	GAMETEXT_PLAYERUPGRADE_UPGRADE,
	GAMETEXT_PLAYERUPGRADE_JUMPTYPE,
	GAMETEXT_PLAYERUPGRADE_MAXHEARTNUMBER,
	GAMETEXT_PLAYERUPGRADE_STRENGTH,
	GAMETEXT_PLAYERUPGRADE_POWERTIME,
	GAMETEXT_PLAYERUPGRADE_GUIDELINETIME,
	GAMETEXT_PLAYERUPGRADE_ENLARGETIME,
	GAMETEXT_PLAYERUPGRADE_SHRINKTIME,
	GAMETEXT_PLAYERUPGRADE_SHIELDTIME,

	GAMETEXT_NORMALNOTICELAYER_NOTIFICATION,
	GAMETEXT_NORMALNOTICELAYER_NOTENOUGHGOLD,
};